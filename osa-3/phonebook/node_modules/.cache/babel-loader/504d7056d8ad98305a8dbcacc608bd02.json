{"ast":null,"code":"var _jsxFileName = \"/home/jmielika/Kurssit/FullStackOpen/osa-2/puhelinluettelo/src/components/Persons.js\";\nimport React from 'react';\n\nconst Person = props => /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 28\n  }\n}, props.person.name, \" \", props.person.number);\n\nconst filterNames = (arr, arg) => arr.filter(person => person.name.toLowerCase().indexOf(arg.toLowerCase()) !== -1);\n/*const addPerson = (event) => {\n    event.preventDefault()\n  \n    const personObject ={\n      name: newName,\n      number: newPhoneNumber\n    }\n\n    console.log(persons)    \n\n    persons.map(person => person.name).includes(newName, 0)\n    ? window.alert(`${newName} is already added to phonebook`)\n    : setPersons(persons.concat(personObject))\n\n    \n    \n\n    //setFilteredPersons(filterNames(persons, nameFilter))\n\n    console.log(persons)\n   \n    \n    //setNameFilter('')\n    setNewName('')\n    setNewPhoneNumber('')\n  }*/\n\n\nconst Persons = props => {\n  const {\n    persons\n  } = props.persons;\n  const nameFilter = props.nameFilter;\n  console.log(persons, nameFilter);\n  nameFilter.toString() === '' ? persons.map((person, name) => {\n    console.log('filtteröimätön');\n    return /*#__PURE__*/React.createElement(Person, {\n      key: name,\n      person: person,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 34\n      }\n    });\n  }) : filterNames(persons, nameFilter).map((person, name) => {\n    console.log('filtteröity');\n    return /*#__PURE__*/React.createElement(Person, {\n      key: name,\n      person: person,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 34\n      }\n    });\n  });\n};\n\nexport default Persons;","map":{"version":3,"sources":["/home/jmielika/Kurssit/FullStackOpen/osa-2/puhelinluettelo/src/components/Persons.js"],"names":["React","Person","props","person","name","number","filterNames","arr","arg","filter","toLowerCase","indexOf","Persons","persons","nameFilter","console","log","toString","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,iBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,MAAN,CAAaC,IAAlB,OAAyBF,KAAK,CAACC,MAAN,CAAaE,MAAtC,CAA3B;;AAEA,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAACE,MAAJ,CAAWN,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYM,WAAZ,GAA0BC,OAA1B,CAAkCH,GAAG,CAACE,WAAJ,EAAlC,MAAyD,CAAC,CAA/E,CAAlC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,MAAME,OAAO,GAAIV,KAAD,IAAW;AACvB,QAAM;AAAEW,IAAAA;AAAF,MAAcX,KAAK,CAACW,OAA1B;AACA,QAAMC,UAAU,GAAGZ,KAAK,CAACY,UAAzB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqBC,UAArB;AAEAA,EAAAA,UAAU,CAACG,QAAX,OAA0B,EAA1B,GACkBJ,OAAO,CAACK,GAAR,CAAY,CAACf,MAAD,EAASC,IAAT,KAAkB;AAC1BW,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,wBAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEZ,IAAb;AAAmB,MAAA,MAAM,EAAED,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAHD,CADlB,GAMkBG,WAAW,CAAEO,OAAF,EAAWC,UAAX,CAAX,CAAkCI,GAAlC,CAAsC,CAACf,MAAD,EAASC,IAAT,KAAkB;AACpDW,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,wBAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEZ,IAAb;AAAmB,MAAA,MAAM,EAAED,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACL,GAHC,CANlB;AAUH,CAhBD;;AAkBA,eAAeS,OAAf","sourcesContent":["import React from 'react'\n\nconst Person = (props) => (<li>{props.person.name} {props.person.number}</li>)\n\nconst filterNames = (arr, arg) => arr.filter(person => person.name.toLowerCase().indexOf(arg.toLowerCase()) !== -1)\n/*const addPerson = (event) => {\n    event.preventDefault()\n  \n    const personObject ={\n      name: newName,\n      number: newPhoneNumber\n    }\n\n    console.log(persons)    \n\n    persons.map(person => person.name).includes(newName, 0)\n    ? window.alert(`${newName} is already added to phonebook`)\n    : setPersons(persons.concat(personObject))\n\n    \n    \n\n    //setFilteredPersons(filterNames(persons, nameFilter))\n\n    console.log(persons)\n   \n    \n    //setNameFilter('')\n    setNewName('')\n    setNewPhoneNumber('')\n  }*/\n\n\nconst Persons = (props) => {\n    const { persons } = props.persons\n    const nameFilter = props.nameFilter\n\n    console.log(persons, nameFilter)\n\n    nameFilter.toString() === ''\n                    ? persons.map((person, name) => {\n                          console.log('filtteröimätön')\n                          return <Person key={name} person={person} /> \n                      })\n                      \n                    : filterNames( persons, nameFilter).map((person, name) => {\n                          console.log('filtteröity')\n                          return <Person key={name} person={person} />\n                    })\n}\n\nexport default Persons"]},"metadata":{},"sourceType":"module"}