{"ast":null,"code":"var _jsxFileName = \"/home/jmielika/Kurssit/FullStackOpen/osa-2/puhelinluettelo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport personsService from './services/persons';\nimport Persons from './components/Persons';\nimport FilterForm from './components/FilterForm';\nimport PersonForm from './components/PersonForm';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [nameFilter, setNameFilter] = useState('');\n\n  const handleFilterChange = event => {\n    setNameFilter(event.target.value);\n  };\n\n  useEffect(() => {\n    personsService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    let personObject = {\n      name: newName,\n      number: newPhoneNumber\n    };\n    const checkPersonOccurrency = persons.filter(person => person.name.toLocaleLowerCase() === newName.toLocaleLowerCase());\n    console.log(checkPersonOccurrency);\n\n    if (checkPersonOccurrency.length === 1) {\n      console.log(checkPersonOccurrency[0].id);\n      personObject = { ...personObject,\n        id: checkPersonOccurrency[0].id\n      };\n    }\n\n    if (checkPersonOccurrency.map(person => person.name.toLocaleLowerCase).includes(newName.toLocaleLowerCase, 0)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        console.log(`${personObject.name} is added, changing number`);\n        personsService.update(personObject.id, personObject).then(returnedPerson => {\n          setPersons(persons.map(personOrig => personOrig.id !== personObject.id ? personOrig : returnedPerson));\n        });\n      }\n\n      setNewName('');\n      setNewPhoneNumber('');\n    } else {\n      console.log(`${personObject.name} is a new person, adding person to the database`);\n      personsService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewPhoneNumber('');\n      });\n    }\n  };\n\n  const handleNameAdd = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberAdd = event => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleDeletePerson = id => {\n    const personOfId = persons.filter(person => person.id === id)[0];\n\n    if (window.confirm(`Delete ${personOfId.name}?`)) {\n      personsService.deletePerson(id).then(() => {\n        setPersons(persons.filter(person => person.id !== id));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(FilterForm, {\n    onChange: handleFilterChange,\n    nameFilter: nameFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"add a new\"), /*#__PURE__*/React.createElement(PersonForm, {\n    onSubmit: addPerson,\n    name: newName,\n    onNameChange: handleNameAdd,\n    phoneNumber: newPhoneNumber,\n    onNumberChange: handlePhoneNumberAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Persons, {\n    persons: persons,\n    nameFilter: nameFilter,\n    handleDeletePerson: handleDeletePerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/jmielika/Kurssit/FullStackOpen/osa-2/puhelinluettelo/src/App.js"],"names":["React","useState","useEffect","personsService","Persons","FilterForm","PersonForm","App","persons","setPersons","newName","setNewName","newPhoneNumber","setNewPhoneNumber","nameFilter","setNameFilter","handleFilterChange","event","target","value","getAll","then","initialPersons","addPerson","preventDefault","personObject","name","number","checkPersonOccurrency","filter","person","toLocaleLowerCase","console","log","length","id","map","includes","window","confirm","update","returnedPerson","personOrig","create","concat","handleNameAdd","handlePhoneNumberAdd","handleDeletePerson","personOfId","deletePerson"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\n\nimport Persons from './components/Persons'\nimport FilterForm from './components/FilterForm'\nimport PersonForm from './components/PersonForm'\n\n\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhoneNumber, setNewPhoneNumber ] = useState('')\n  const [ nameFilter, setNameFilter] = useState('')\n\n  const handleFilterChange = (event) => {\n      setNameFilter(event.target.value)\n  }\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      }) \n    }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n  \n    let personObject ={\n      name: newName,\n      number: newPhoneNumber\n    }    \n\n    const checkPersonOccurrency = persons.filter(person => person.name.toLocaleLowerCase() === newName.toLocaleLowerCase())\n    console.log(checkPersonOccurrency)\n    if (checkPersonOccurrency.length === 1) {\n      console.log(checkPersonOccurrency[0].id)\n       personObject = {...personObject, id: checkPersonOccurrency[0].id}\n    }\n\n    if (checkPersonOccurrency.map(person => person.name.toLocaleLowerCase).includes(newName.toLocaleLowerCase, 0)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        console.log(`${personObject.name} is added, changing number`)\n\n        personsService\n          .update(personObject.id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(personOrig => personOrig.id !== personObject.id ? personOrig : returnedPerson))\n          })           \n      } \n      setNewName('')\n      setNewPhoneNumber('')\n    } else {\n      console.log(`${personObject.name} is a new person, adding person to the database`)\n      personsService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewPhoneNumber('')\n        })\n    }\n   \n    \n    \n  }\n\n  const handleNameAdd = (event) => {\n    setNewName(event.target.value)\n  }\n\n  \n  const handlePhoneNumberAdd =(event) => {\n    setNewPhoneNumber(event.target.value)\n  }\n\n  const handleDeletePerson = (id) => {\n    const personOfId = persons.filter(person => person.id === id)[0]\n    if (window.confirm(`Delete ${personOfId.name}?`)) {\n      personsService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <FilterForm onChange={handleFilterChange} nameFilter={nameFilter}/>\n        \n      <h3>add a new</h3>\n      <PersonForm onSubmit={addPerson} name={newName} onNameChange={handleNameAdd} phoneNumber={newPhoneNumber} onNumberChange={handlePhoneNumberAdd} />\n      <h2>Numbers</h2>\n      <ul>\n        <Persons\n            persons={persons}\n            nameFilter={nameFilter}\n            handleDeletePerson={handleDeletePerson} />\n      </ul>\n    </div>\n  )\n\n  }\n\nexport default App"]},"metadata":{},"sourceType":"module"}