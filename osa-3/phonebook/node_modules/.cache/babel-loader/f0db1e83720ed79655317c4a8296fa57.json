{"ast":null,"code":"var _jsxFileName = \"/home/jmielika/Kurssit/FullStackOpen/osa-2/puhelinluettelo/src/components/Persons.js\";\nimport React from 'react';\n\nconst Person = props => {\n  console.log(props.person);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }\n  }, props.person.name, \" \", props.person.number);\n};\n\nconst FilteredPersons = (persons, nameFilter) => {\n  return filterNames((persons, nameFilter).map((person, name) => /*#__PURE__*/React.createElement(Person, {\n    key: name,\n    person: person,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 68\n    }\n  })));\n};\n\nconst filterNames = (arr, arg) => arr.filter(person => person.name.toLowerCase().indexOf(arg.toLowerCase()) !== -1);\n\nconst Persons = props => {\n  const persons = [...props.persons];\n  const nameFilter = props.nameFilter;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FilteredPersons, {\n    persons: persons,\n    nameFilter: nameFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  })) //{filterNames( persons, nameFilter ).map((person, name) => <Person key={name} person={person} />)}\n\n  /*nameFilter.toString() === ''\n  ? <ul>\n      {persons.map((person, name) => <Person key={name} person={person} />)}\n    </ul>\n   : <ul> \n      {filterNames( persons, nameFilter).map((person, name) => <Person key={name} person={person} />)}\n    </ul>*/\n  ;\n};\n\nexport default Persons;","map":{"version":3,"sources":["/home/jmielika/Kurssit/FullStackOpen/osa-2/puhelinluettelo/src/components/Persons.js"],"names":["React","Person","props","console","log","person","name","number","FilteredPersons","persons","nameFilter","filterNames","map","arr","arg","filter","toLowerCase","indexOf","Persons"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACG,MAAN,CAAaC,IAAlB,OAAyBJ,KAAK,CAACG,MAAN,CAAaE,MAAtC,CAAR;AACH,CAHD;;AAKA,MAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAyB;AAC7C,SAAOC,WAAW,CAAC,CAACF,OAAO,EAAEC,UAAV,EAAsBE,GAAtB,CAA0B,CAACP,MAAD,EAASC,IAAT,kBAAkB,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,IAAb;AAAmB,IAAA,MAAM,EAAED,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5C,CAAD,CAAlB;AACH,CAFD;;AAIA,MAAMM,WAAW,GAAG,CAACE,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAACE,MAAJ,CAAWV,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYU,WAAZ,GAA0BC,OAA1B,CAAkCH,GAAG,CAACE,WAAJ,EAAlC,MAAyD,CAAC,CAA/E,CAAlC;;AAGA,MAAME,OAAO,GAAIhB,KAAD,IAAW;AACvB,QAAMO,OAAO,GAAG,CAAC,GAAGP,KAAK,CAACO,OAAV,CAAhB;AACA,QAAMC,UAAU,GAAGR,KAAK,CAACQ,UAAzB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAED,OAA1B;AAAmC,IAAA,UAAU,EAAEC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAKJ;;AACQ;;;;;;;AANJ;AAeH,CAnBD;;AAqBA,eAAeQ,OAAf","sourcesContent":["import React from 'react'\n\nconst Person = (props) => {\n    console.log(props.person)\n    return (<li>{props.person.name} {props.person.number}</li>)\n}\n\nconst FilteredPersons = (persons, nameFilter) => {\n    return filterNames((persons, nameFilter).map((person, name) => <Person key={name} person={person} />))\n}\n\nconst filterNames = (arr, arg) => arr.filter(person => person.name.toLowerCase().indexOf(arg.toLowerCase()) !== -1)\n\n\nconst Persons = (props) => {\n    const persons = [...props.persons]\n    const nameFilter = props.nameFilter\n\n    return (\n        <ul> \n            <FilteredPersons persons={persons} nameFilter={nameFilter}/>\n        </ul>\n\n//{filterNames( persons, nameFilter ).map((person, name) => <Person key={name} person={person} />)}\n        /*nameFilter.toString() === ''\n        ? <ul>\n            {persons.map((person, name) => <Person key={name} person={person} />)}\n          </ul>\n\n        : <ul> \n            {filterNames( persons, nameFilter).map((person, name) => <Person key={name} person={person} />)}\n          </ul>*/\n    )\n}\n\nexport default Persons"]},"metadata":{},"sourceType":"module"}