{"ast":null,"code":"var _jsxFileName = \"/home/jmielika/Kurssit/FullStackOpen/osa-2/puhelinluettelo/src/components/Persons.js\";\nimport React from 'react';\n\nconst Person = props => {\n  console.log(props.person);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }\n  }, props.person.name, \" \", props.person.number);\n};\n\nconst filterNames = (arr, arg) => arr.filter(person => person.name.toLowerCase().indexOf(arg.toLowerCase()) !== -1);\n/*const addPerson = (event) => {\n    event.preventDefault()\n  \n    const personObject ={\n      name: newName,\n      number: newPhoneNumber\n    }\n\n    console.log(persons)    \n\n    persons.map(person => person.name).includes(newName, 0)\n    ? window.alert(`${newName} is already added to phonebook`)\n    : setPersons(persons.concat(personObject))\n\n    \n    \n\n    //setFilteredPersons(filterNames(persons, nameFilter))\n\n    console.log(persons)\n   \n    \n    //setNameFilter('')\n    setNewName('')\n    setNewPhoneNumber('')\n  }*/\n\n\nconst Persons = props => {\n  const persons = [...props.persons];\n  const nameFilter = props.nameFilter;\n  console.log();\n  nameFilter.toString() === '' ? persons.map((person, name) => {\n    console.log('filtteröimätön toimii', person);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 34\n      }\n    }, name, \" \", person.number);\n  }) : filterNames(persons, nameFilter).map((person, name) => {\n    console.log('filtteröity toimii');\n    console.log(person);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 34\n      }\n    }, name, \" \", person.number);\n  });\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }, \"toimii\");\n};\n\nexport default Persons;","map":{"version":3,"sources":["/home/jmielika/Kurssit/FullStackOpen/osa-2/puhelinluettelo/src/components/Persons.js"],"names":["React","Person","props","console","log","person","name","number","filterNames","arr","arg","filter","toLowerCase","indexOf","Persons","persons","nameFilter","toString","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACG,MAAN,CAAaC,IAAlB,OAAyBJ,KAAK,CAACG,MAAN,CAAaE,MAAtC,CAAR;AACH,CAHD;;AAKA,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAACE,MAAJ,CAAWN,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYM,WAAZ,GAA0BC,OAA1B,CAAkCH,GAAG,CAACE,WAAJ,EAAlC,MAAyD,CAAC,CAA/E,CAAlC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,MAAME,OAAO,GAAIZ,KAAD,IAAW;AACvB,QAAMa,OAAO,GAAG,CAAC,GAAGb,KAAK,CAACa,OAAV,CAAhB;AACA,QAAMC,UAAU,GAAGd,KAAK,CAACc,UAAzB;AAEAb,EAAAA,OAAO,CAACC,GAAR;AACAY,EAAAA,UAAU,CAACC,QAAX,OAA0B,EAA1B,GACkBF,OAAO,CAACG,GAAR,CAAY,CAACb,MAAD,EAASC,IAAT,KAAkB;AAC1BH,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCC,MAArC;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAL,OAAYD,MAAM,CAACE,MAAnB,CAAP;AACH,GAHD,CADlB,GAMkBC,WAAW,CAAEO,OAAF,EAAWC,UAAX,CAAX,CAAkCE,GAAlC,CAAsC,CAACb,MAAD,EAASC,IAAT,KAAkB;AAClDH,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACFD,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAL,OAAYD,MAAM,CAACE,MAAnB,CAAP;AACL,GAJC,CANlB;AAWA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,CAjBD;;AAmBA,eAAeO,OAAf","sourcesContent":["import React from 'react'\n\nconst Person = (props) => {\n    console.log(props.person)\n    return (<li>{props.person.name} {props.person.number}</li>)\n}\n\nconst filterNames = (arr, arg) => arr.filter(person => person.name.toLowerCase().indexOf(arg.toLowerCase()) !== -1)\n/*const addPerson = (event) => {\n    event.preventDefault()\n  \n    const personObject ={\n      name: newName,\n      number: newPhoneNumber\n    }\n\n    console.log(persons)    \n\n    persons.map(person => person.name).includes(newName, 0)\n    ? window.alert(`${newName} is already added to phonebook`)\n    : setPersons(persons.concat(personObject))\n\n    \n    \n\n    //setFilteredPersons(filterNames(persons, nameFilter))\n\n    console.log(persons)\n   \n    \n    //setNameFilter('')\n    setNewName('')\n    setNewPhoneNumber('')\n  }*/\n\n\nconst Persons = (props) => {\n    const persons = [...props.persons]\n    const nameFilter = props.nameFilter\n\n    console.log()\n    nameFilter.toString() === ''\n                    ? persons.map((person, name) => {\n                          console.log('filtteröimätön toimii', person)\n                          return <li>{name} {person.number}</li> \n                      })\n                      \n                    : filterNames( persons, nameFilter).map((person, name) => {\n                            console.log('filtteröity toimii')\n                          console.log(person)\n                          return <li>{name} {person.number}</li>\n                    })\n    return <li>toimii</li>\n}\n\nexport default Persons"]},"metadata":{},"sourceType":"module"}